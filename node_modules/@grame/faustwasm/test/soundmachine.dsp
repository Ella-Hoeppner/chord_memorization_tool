import("stdfaust.lib");

gain = hslider("gain",.41,0,1,0.01) : si.smoo;
oct = hslider("oct",.5,0,1,0.01) : si.smoo;
noteLength = hslider("noteLen",.5,0,1,0.01):si.smoo;
timbre = hslider("timbre",.5,0,1,0.01):si.smoo;
filterAmt = hslider("filter",.5,0,1,0.001):si.smoo;
freq = hslider("freq [unit:Hz][scale:log]", 110, 20, 24000, 1): si.smooth(ba.tau2pole(.30));
verbAmt= hslider("reverb",.5,0,1,0.01):si.smoo;
// verb = hslider("reverb",0,0,1,0.01):si.smooth;
gate = button("note on/off"); // Add this button

//oscillators
nOscs = 8;
offset = hslider("offset",.25,0,0.25,0.001):si.smoo * timbre;
// offset = 0.05;
saws = par(
   i, 
   nOscs, 
   os.saw2f4(
       freq/4 * ((i+1)) 
       + offset*i*(-1*i%2)*timbre
   )
):> /(nOscs);

sinOsc = (os.osc(freq)+os.osc(freq*4-offset*2))/4;

sound = sinOsc,saws:si.interpolate(timbre):ve.oberheimLPF(filterAmt,2);
// ADSR envelope
envelope = gate : en.adsr(0.01, 0.1, 0.9, 0.5)*.75;

dry = sound * envelope * gain;
reverbApplied = 
   dry <: re.jpverb(
       1, //decay s
       0.45, //damp
       1, //size
       0.8, //early
       0.15, //modulation depth
       .01,      //mod freq
       .8,      //low
       .6,      //mid
       1, //high
       3000, //lowcut
       7000 //highcut
   )<:
       dry*(1-verbAmt)+_*verbAmt,
       dry*(1-verbAmt)+_*verbAmt;

//mixer
process =  reverbApplied;

